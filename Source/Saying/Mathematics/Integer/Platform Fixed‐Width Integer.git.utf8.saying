thing (clients)
 [
  [
   English: A natural number stored in a fixed amound of memory.
  ]
  [
   English: {platform fixed‐width integer} makes the same design tradeoffs as {platform fixed‐width natural number}. See {platform fixed‐width natural number} for more information.
  ]
 ]
 (
  English: platform fixed‐width integer
 )
 C: “int”
 C♯: “int”
 Kotlin: “Int”
 Swift: “Int”

use (clients)
 comparison of (platform fixed‐width integer) for equality
 {
  action (clients)
   (first: platform fixed‐width integer) is (second: platform fixed‐width integer)
   truth value
   C: “¤(28)” first “ == ” second “¤(29)”
   C♯: “¤(28)” first “ == ” second “¤(29)”
   JavaScript: “¤(28)” first “ == ” second “¤(29)”
   Kotlin: “¤(28)” first “ == ” second “¤(29)”
   Swift: «¤(28)» first “ == ” second „¤(29)“

  action (clients)
   (first: platform fixed‐width integer) is not (second: platform fixed‐width integer)
   truth value
   C: “¤(28)” first “ ¤(21)= ” second “¤(29)”
   C♯: “¤(28)” first “ ¤(21)= ” second “¤(29)”
   JavaScript: “¤(28)” first “ ¤(21)= ” second “¤(29)”
   Kotlin: “¤(28)” first “ ¤(21)= ” second “¤(29)”
   Swift: «¤(28)» first “ ¤(21)= ” second „¤(29)“

  action (clients)
   example
   platform fixed‐width integer
   {
    ← zero
   }

  action (clients)
   differing example
   platform fixed‐width integer
   {
    ← greater example
   }
 }

use (clients)
 comparison of (platform fixed‐width integer) for order
 {
  action (clients)
   (first: platform fixed‐width integer) is less than (second: platform fixed‐width integer)
   truth value
   C: “¤(28)” first “ < ” second “¤(29)”
   C♯: “¤(28)” first “ < ” second “¤(29)”
   JavaScript: “¤(28)” first “ < ” second “¤(29)”
   Kotlin: “¤(28)” first “ < ” second “¤(29)”
   Swift: «¤(28)» first “ < ” second „¤(29)“

  action (clients)
   (first: platform fixed‐width integer) is greater than (second: platform fixed‐width integer)
   truth value
   C: “¤(28)” first “ > ” second “¤(29)”
   C♯: “¤(28)” first “ > ” second “¤(29)”
   JavaScript: “¤(28)” first “ > ” second “¤(29)”
   Kotlin: “¤(28)” first “ > ” second “¤(29)”
   Swift: «¤(28)» first “ > ” second „¤(29)“

  action (clients)
   (first: platform fixed‐width integer) is less than or equal to (second: platform fixed‐width integer)
   truth value
   C: “¤(28)” first “ <= ” second “¤(29)”
   C♯: “¤(28)” first “ <= ” second “¤(29)”
   JavaScript: “¤(28)” first “ <= ” second “¤(29)”
   Kotlin: “¤(28)” first “ <= ” second “¤(29)”
   Swift: «¤(28)» first “ <= ” second „¤(29)“

  action (clients)
   (first: platform fixed‐width integer) is greater than or equal to (second: platform fixed‐width integer)
   truth value
   C: “¤(28)” first “ >= ” second “¤(29)”
   C♯: “¤(28)” first “ >= ” second “¤(29)”
   JavaScript: “¤(28)” first “ >= ” second “¤(29)”
   Kotlin: “¤(28)” first “ >= ” second “¤(29)”
   Swift: «¤(28)» first “ >= ” second „¤(29)“

  action (clients)
   greater example
   platform fixed‐width integer
   {
    ← one
   }
 }

use (clients)
 additive arithmetic with (platform fixed‐width integer)
 {
  action (clients)
   (
    English: zero
   )
   platform fixed‐width integer
   C: “0”
   C♯: “0”
   JavaScript: “0”
   Kotlin: “0”
   Swift: “0”

  action (clients)
   (
    English: one
   )
   platform fixed‐width integer
   C: “1”
   C♯: “1”
   JavaScript: “1”
   Kotlin: “1”
   Swift: “1”
 }
