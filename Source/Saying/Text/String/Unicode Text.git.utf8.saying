thing (clients)
 [
  [
   English: A sequence of Unicode scalars in normalized form according to compatibility decomposition (NFKD).
  ]
  [
   English: Maintaining normalization means that insertions and removals may also expand or rearrange scalars. Positions and distances recorded before a change are no longer valid afterward.
  ]
 ]
 (
  English: Unicode text
  Swift: UnicodeText
 )
 {
  part (file)
   (
    English: scalars
   )
   Unicode scalars
 }

action (file)
 (
  English: Unicode text skipping normalization of (scalars: Unicode scalars)
  Swift: UnicodeText.init skippingNormalizationOf (scalars: [scalars])
 )
 Unicode text
 create

action (clients)
 (
  English: Unicode text of (scalars: Unicode scalars)
  Swift: UnicodeText.init (scalars: [scalars])
 )
 Unicode text
 {
  ← Unicode text skipping normalization of (compatibility decomposition of (scalars))
 }

use (clients)
 general containers of (Unicode text)
 {
  action (clients)
   (
    English: example
   )
   Unicode text
   {
    ← non‐empty example
   }
 }

use (clients)
 comparison of (Unicode text) for equality
 {
  action (clients)
   (first: Unicode text) is (second: Unicode text)
   truth value
   {
    ← ((scalars) of (first)) is ((scalars) of (second))
   }

  action (clients)
   differing example
   Unicode text
   {
    ← Unicode text of (“!”)
   }
 }

use (clients)
 hashing (Unicode text)
 {
  action (clients)
   hash key (key: Unicode text) with (hasher: ↓ hasher)
   {
    hash part ((scalars) of (key)) with (↓ hasher)
   }
 }

use
 use of (Unicode text) as list of (Unicode scalar) indexed by (Unicode scalar index)
 {
  action (clients)
   (
    English: beginning of (list: Unicode text)
   )
   Unicode scalar index
   {
    ← beginning of ((scalars) of (list))
   }

  action (clients)
   (
    English: end of (list: Unicode text)
   )
   Unicode scalar index
   {
    ← end of ((scalars) of (list))
   }

  action (clients)
   (
    English: advance (index: ↓ Unicode scalar index) to next in (list: Unicode text)
   )
   {
    advance (↓ index) to next in ((scalars) of (list))
   }

  action (clients)
   (
    English: index after (index: Unicode scalar index) in (list: Unicode text)
   )
   Unicode scalar index
   {
    ← index after (index) in ((scalars) of (list))
   }

  action (clients)
   (
    English: entry at (index: Unicode scalar index) in (list: Unicode text)
   )
   Unicode scalar
   {
    ← entry at (index) in ((scalars) of (list))
   }

  action (clients)
   (
    English: first in (list: Unicode text)
   )
   optional (Unicode scalar)
   {
    ← first in ((scalars) of (list))
   }

  action (clients)
   (
    English: (list: Unicode text) is empty
   )
   truth value
   {
    ← ((scalars) of (list)) is empty
   }

  action (clients)
   (
    English: (list: Unicode text) is not empty
   )
   truth value
   {
    ← ((scalars) of (list)) is not empty
   }

  action (clients)
   (
    English: non‐empty example
   )
   Unicode text
   {
    ← Unicode text of (“ ”)
   }
 }
