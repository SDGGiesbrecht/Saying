thing (clients)
 (
  English: Unicode scalar
 )
 C: “gunichar” (“glib¤(2D)2.0”)
 C♯: “Rune” (“System.Text”) {“¤(23)if !NETCOREAPP3¤(5F)0¤(5F)OR¤(5F)GREATER¤(A)public readonly struct Rune¤(A){¤(A)private readonly uint ¤(5F)value;¤(A)private Rune(uint scalarValue, bool ¤(5F))¤(A){¤(A)¤(5F)value = scalarValue;¤(A)}¤(A)internal static Rune UnsafeCreate(uint scalarValue) => new Rune(scalarValue, false);¤(A)public static Rune GetRuneAt(string input, int index)¤(A){¤(A)uint returnValue = input[index];¤(A)if (0xD800U <= returnValue ¤(26)¤(26) returnValue < 0xDC00U)¤(A){¤(A)uint lowSurrogate = input[index + 1];¤(A)returnValue = (returnValue << 10) + lowSurrogate ¤(2D) ((0xD800U << 10) + 0xDC00U ¤(2D) (1 << 16));¤(A)}¤(A)return UnsafeCreate(returnValue);¤(A)}¤(A)}¤(A)¤(23)endif”}
 Kotlin: “Int”
 Swift: “Unicode.Scalar”
 {
 }

use (clients)
 sets of (Unicode scalar)
 {
 }
