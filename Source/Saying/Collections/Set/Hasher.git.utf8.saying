thing (clients)
 (
  English: hasher
  Deutsch: Verstreuer
  français : hacheur
  ελληνικά: κατακερματιστής
 )
 C: “guint” (“glib¤(2D)2.0”)
 C♯: “HashCode” (“System”)
 Kotlin: “Int”
 Swift: “Hasher”
 {
 }

action (clients)
 (
  English: create hasher
 )
 hasher
 C: “0”
 C♯: “new HashCode()”
 JavaScript: “0”
 Kotlin: “0”
 Swift: “Hasher()”

use (clients)
 storage of (hasher)
 {
 }

action (unit)
 (
  English: feed (hash: hash value) into (hasher: ↓ hasher)
 )
 C: “” hasher “ ¤(5E)= ” hash “”
 C♯: “” hasher “.Add(” hash “)”
 JavaScript: “” hasher “ ¤(5E)= ” hash “”
 Kotlin: “” hasher “ = Objects.hash(” hasher “, ” hash “)” (“java.util”)
 Swift: “” hasher “.combine(” hash “)”

action (unit)
 (
  English: final hash value from (hasher: hasher)
 )
 hash value
 C: “” hasher “”
 C♯: “” hasher “.ToHashCode()”
 JavaScript: “” hasher “”
 Kotlin: “” hasher “”
 Swift: “” hasher “.finalize()”
