ability (clients)
 (
  English: use of (list) as list of (element) indexed by (index)
 )
 {
  requirement (clients)
   (
    English: beginning of (list: list)
    Deutsch: Anfang von (Liste: [list])
    français : début de (liste: [list])
    ελληνικά: αρχή (κατάλογος: [list])
   )
   index

  requirement (clients)
   (
    English: end of (list: list)
    Deutsch: Ende von (Liste: [list])
    français : fin de (liste: [list])
    ελληνικά: τέλος (κατάλογος: [list])
   )
   index

  requirement (clients)
   (
    English: entry at (index: index) in (list: list)
   )
   element

  requirement (clients)
   [
    test {
     let (• empty list: list) be (empty: list)
     verify ((beginning of (empty list)) is (end of (empty list)))
    }
   ]
   (
    English: empty
    Deutsch: leer
    français : vide
    ελληνικά: άδειος
   )
   list

  requirement (clients)
   [
    test {
     let (• list: list) start as (empty: list)
     append (example element: element) to (↓ list)
     ignore (entry at (beginning of (list)) in (list))
    }
   ]
   (
    English: append (element: element) to (list: ↓ list)
   )
 }
