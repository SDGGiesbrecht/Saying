extension
 use of (list) as list of (element) indexed by (index)
 {
  thing (clients)
   (
    English: slice of (list)
   )
   Swift: “Slice<” list “>” [
     “==(¤(5F): ” index “, ¤(5F): ” index “)”
     “<(¤(5F): ” index “, ¤(5F): ” index “)”
     “” list “.startIndex”
     “” list “.endIndex”
     “” list “.subscript(¤(5F): ” index “)”
     “” list “.isEmpty”
     “” list “.index(after: ” index “)”
    ] {
     “extension ” list “: Collection {}”
     “extension ” index “: Comparable {}”
    }
   {
    part (clients/nowhere)
     (
      English: whole
     )
     list
   }

  action (clients)
   (
    English: entirety of (list: list)
   )
   slice of (list)
   Swift: “Slice(base: ” list “, bounds: ” list “.startIndex ..< ” list “.endIndex)”
   create

  use
   storage of (slice of (list))
   {
   }
 }
