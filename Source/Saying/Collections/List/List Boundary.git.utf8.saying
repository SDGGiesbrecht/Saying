thing (clients)
 (
  English: list boundary
 )
 C: “guint” (“glib¤(2D)2.0”)
 C♯: “int”
 Kotlin: “Int”
 Swift: “Int”

use (clients)
 general containers of (list boundary)
 {
  action (clients)
   example
   list boundary
   C: “0”
   C♯: “0”
   JavaScript: “0”
   Kotlin: “0”
   Swift: “0”
 }

use (clients)
 comparison of (list boundary) for equality
 {
  action (clients)
   (first: list boundary) is (second: list boundary)
   truth value
   C: “” first “ == ” second “”
   C♯: “” first “ == ” second “”
   JavaScript: “” first “ == ” second “”
   Kotlin: “” first “ == ” second “”
   Swift: «» first “ == ” second „“

  action (clients)
   (first: list boundary) is not (second: list boundary)
   truth value
   C: “” first “ != ” second “”
   C♯: “” first “ != ” second “”
   JavaScript: “” first “ != ” second “”
   Kotlin: “” first “ != ” second “”
   Swift: «» first “ != ” second „“

  action (clients)
   hash key (key: list boundary) with (hasher: ↓ hasher)
   Swift: “” key “.hash(into: ¤(26)” hasher “)”
   {
    feed (direct hash value of (key)) into (↓ hasher)
   }

  action (unit)
   (
    English: hash value of (key: list boundary)
   )
   hash value
   C♯: “” key “.GetHashCode()”
   Kotlin: “” key “.hashCode()”
   {
    ← hash value of (key) according to comparison for equality
   }

  action (clients)
   differing example
   list boundary
   {
    ← greater example
   }
 }

action (file)
 [
  test {ignore (direct hash value of (example: list boundary))}
 ]
 direct hash value of (boundary: list boundary)
 hash value
 C: “” boundary “”
 C♯: “” boundary “”
 JavaScript: “” boundary “”
 Kotlin: “” boundary “”
 Swift: “” boundary “”

use (clients)
 comparison of (list boundary) for order
 {
  action (clients)
   (first: list boundary) is less than (second: list boundary)
   truth value
   C: “” first “ < ” second “”
   C♯: “” first “ < ” second “”
   JavaScript: “” first “ < ” second “”
   Kotlin: “” first “ < ” second “”
   Swift: «» first “ < ” second „“

  action (clients)
   (first: list boundary) is greater than (second: list boundary)
   truth value
   C: “” first “ > ” second “”
   C♯: “” first “ > ” second “”
   JavaScript: “” first “ > ” second “”
   Kotlin: “” first “ > ” second “”
   Swift: «» first “ > ” second „“

  action (clients)
   (first: list boundary) is less than or equal to (second: list boundary)
   truth value
   C: “” first “ <= ” second “”
   C♯: “” first “ <= ” second “”
   JavaScript: “” first “ <= ” second “”
   Kotlin: “” first “ <= ” second “”
   Swift: «» first “ <= ” second „“

  action (clients)
   (first: list boundary) is greater than or equal to (second: list boundary)
   truth value
   C: “” first “ >= ” second “”
   C♯: “” first “ >= ” second “”
   JavaScript: “” first “ >= ” second “”
   Kotlin: “” first “ >= ” second “”
   Swift: «» first “ >= ” second „“

  action (clients)
   greater example
   list boundary
   C: “1”
   C♯: “1”
   JavaScript: “1”
   Kotlin: “1”
   Swift: “1”
 }
